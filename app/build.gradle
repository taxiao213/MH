apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.haxi.mh"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        // dex突破65535的限制
        multiDexEnabled true
        ndk {
            // 设置支持的SO库架构
            abiFilters 'armeabi', 'x86' //, 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //分包兼容低版本
    dexOptions {
        javaMaxHeapSize "4g"
        jumboMode = true
    }
    //签名 引用位置
    signingConfigs {
        config {
            storeFile file("C:\\project\\android\\mh\\MH\\mh\\mh.jks")
            storePassword "mh123456"
            keyAlias "key_mh"
            keyPassword "mh123456"
            v2SigningEnabled true
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java', 'src/main/aidl']
            resources.srcDirs = ['src/main/java', 'src/main/aidl']
            aidl.srcDirs = ['src/main/aidl']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = ['src/main/assets']
        }
    }
    buildTypes {
        release {
            //混淆
            minifyEnabled true
            //移除无用的resource文件
            shrinkResources true
            //Zipalign优化
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
            android.applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def versionName = variant.versionName
                        def flavor = variant.productFlavors[0].name
                        def date = new Date()
                        def name = variant.buildType.name
                        def currentDate = date.format('_MM_dd_')
                        def math = (int) (Math.random() * 100)
                        def fileName = flavor + "_" + name + "_" + versionName + currentDate + math + ".apk"
                        outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
        debug {
            signingConfig signingConfigs.config
        }
        debug {
            //在线查看app数据库 amitshekhar.android:debug
            resValue("string", "PORT_NUMBER", "9000")
        }
    }
    flavorDimensions "fruit"
    productFlavors {
        wandoujia {}
        baidu {}
        c360 {}
        uc {}
        myapp {}
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

/* 针对greenDao的一些配置 */
greendao {
    schemaVersion 1 //数据库版本
    daoPackage 'com.haxi.mh'
    //targetGenDir  //生成的根目录 directory ( build/generated/source/greendao).
    generateTests true // Set to true to automatically generate unit tests. 是否进行单元测试
    //targetGenDirTests //生成的单元测试根目录 Defaults to src/androidTest/java.
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout:$rootProject.constraintLayoutVersion"
    compile "com.android.support:multidex:$rootProject.multidexVersion"
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"
    compile "junit:junit:$rootProject.junitVersion"

    /* butterKnife */
    compile "com.jakewharton:butterknife:$rootProject.butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$rootProject.butterknifeVersion"

    /*greendao*/
    compile "org.greenrobot:greendao:$rootProject.greendaoVersion"
    compile "org.greenrobot:eventbus:$rootProject.eventbusVersion"
    compile "net.zetetic:android-database-sqlcipher:$rootProject.databaseSqlcipherVersion"

    /*rotrofit*/
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.rxjavaVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofit2RetrofitVersion"
    compile "com.squareup.retrofit2:converter-scalars:$rootProject.retrofit2ConverterScalarsVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofit2ConverterGsonVersion"
    compile "com.trello.rxlifecycle2:rxlifecycle:$rootProject.rxlifecycleVersion"
    compile "com.trello.rxlifecycle2:rxlifecycle-components:$rootProject.rxlifecycleVersion"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttp3InterceptorVersion"
    compile "com.orhanobut:logger:$rootProject.orhanobutLoggerVersion"
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rxjava2Version"

    /*bugly*/
    compile "com.tencent.bugly:crashreport:$rootProject.buglyVersion"
    //其中latest.release指代最新Bugly SDK版本号，也可以指定明确的版本号，例如2.1.9
    compile "com.tencent.bugly:nativecrashreport:$rootProject.buglyVersion"
    //其中latest.release指代最新Bugly NDK版本号，也可以指定明确的版本号，例如3.0

    /* debug 在线查看app数据库 */
    debugCompile "com.amitshekhar.android:debug-db:$rootProject.debugDbVersion"

    /* facebook.stetho 查看数据库 拦截网络请求 */
    compile "com.facebook.stetho:stetho:$rootProject.stethoVersion"

    /*pinyin*/
    compile "com.belerweb:pinyin4j:$rootProject.pinyin4jVersion"

    /* webrtc */
    implementation "org.webrtc:google-webrtc:$rootProject.webrtcVersion"

    //dagger
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    annotationProcessor "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"

    /* leakcanary */
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$rootProject.leakcanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$rootProject.leakcanaryVersion"
    debugImplementation "com.squareup.leakcanary:leakcanary-support-fragment:$rootProject.leakcanaryVersion"

    /*permission*/
    compile "com.hjq:xxpermissions:$rootProject.xxpermissionsVersion"

    //-------------------------------------------- 推送 -----------------------------------------
    /* 魅族推送 */
    compile(group: 'com.meizu.flyme.internet', name: 'push-internal', version: '3.8.1', ext: 'aar')

    /*华为push 下载地址 https://obs.cn-north-2.myhwclouds.com/hms-ds-wf/sdk/HMS_SDK_2.6.0.301.zip*/
    compile "com.huawei.android.hms:push:$rootProject.hmsPushVersion"

    /* 友盟推送 统计 */
    //PushSDK必须依赖基础组件库，所以需要加入对应依赖
    compile "com.umeng.umsdk:common:$rootProject.umengCommonVersion"
    //PushSDK必须依赖utdid库，所以需要加入对应依赖
    compile "com.umeng.umsdk:utdid:$rootProject.umengUtdidVersion"
    //PushSDK
    compile "com.umeng.umsdk:push:$rootProject.umengPushVersion"

    //-------------------------------------------- 支付 -----------------------------------------
    /* 微信支付 */
    compile "com.tencent.mm.opensdk:wechat-sdk-android-with-mta:$rootProject.wxPayVersion"

    /* 支付宝支付 */
    implementation(name: 'alipaySdk-15.6.2-20190416165100-noUtdid', ext: 'aar')

    //-------------------------------------------- 第三方依赖 -----------------------------------------
    /* 相册 */
    implementation project(':matisse')
}